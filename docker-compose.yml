version: '3'
services:
  nginx: 
    image: nginx:latest
    container_name: ngingx
    restart: always
    volumes:
      - ./data/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./public:/usr/share/nginx/www
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    links:
     - "web:epweb"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  mongo:
    container_name: echopig-mongo
    image: mongo
    ports:
     - "27017:27017"
    volumes:
     - mongo:/data/db
     - ./data/mongo/mongo-setup.sh:/docker-entrypoint-initdb.d/mongo-setup.sh:ro
    restart: always
    env_file:
     - .env.prod
  web:
    build: .
    image: epweb:latest
    ports:
     - "9001:9001"
    volumes:
     - .:/usr/src/app
     - /usr/src/app/node_modules
    environment:
      ENV: production
      NODE_ENV: production
    env_file:
     - .env.prod
    depends_on:
      - mongo

volumes:
  mongo: