events {
  worker_connections  1024;
}

http {
  server {
    listen 80;
    listen [::]:80;
    server_tokens off;
    # server_name echopig.com;
    
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }    
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_tokens off;
    # server_name echopig.com www.echopig.com;
    
    ssl_certificate /etc/letsencrypt/live/echopig.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/echopig.com/privkey.pem;

    ssl_session_tickets off;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # config to don't allow the browser to render the page inside an frame or iframe
    add_header X-Frame-Options SAMEORIGIN;
    # when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
    # to disable content-type sniffing on some browsers.
    add_header X-Content-Type-Options nosniff;


    location ~ ^/(assets/|images/|img/|javascripts/|js/|css/|stylesheets/|flash/|media/|static/|robots.txt|humans.txt|favicon.ico) {
      root /usr/share/nginx/www;
      include /etc/nginx/mime.types;
      access_log off;
      expires 24h;
    }

    location / {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_pass http://epweb:9001;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

      proxy_redirect off;
      proxy_set_header   X-Forwarded-Proto $scheme;
    }
  }
}